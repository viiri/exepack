## v1.3.0

The decompression stub now works when the size of the EXEPACK block
(exepack_size in the EXEPACK header) is 0xfff1 or greater. Such a large
EXEPACK block is only possible if the packed relocation table contains
between 32,594 and 32,601 entries. Previously, in this case, the
computation (exepack_size + 15)/16 resulted in an integer overflow, and
an incorrect computation of where to copy the EXEPACK block at runtime.


## v1.2.0 2021-09-04

Output files are now written with the correct value for the e_csum
(checksum) field. Formerly, the value of e_csum in written files was
always 0x0000. The checksums of input files continue to be ignored.


## v1.1.0 2021-09-01

Compress mode now works. Before this release, because of a bug, compress
mode had only returned the input executable essentially unchanged (after
normalizing the EXE header and possibly truncating the file to the size
specified there).

Compress mode and decompress mode now handle the e_minalloc field
correctly. Formerly, this field was copied verbatim from input to
output. Now, e_minalloc is adjusted to keep constant the size of the
program text plus the additional memory allocated for e_minalloc, except
where the EXEPACK decompression stub requires a minor expansion in the
total size. The size computations match those used by EXEPACK.EXE 4.00
and UNP 4.11.

Compressed executables now use a stack size of 128 bytes, up from 16
bytes. LINK.EXE /EXEPACK and EXEPACK.EXE also produce executables that
use a stack of 128 bytes.


## v1.0.0 2020-03-07

Initial release.
